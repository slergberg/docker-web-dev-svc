version: "3"

networks:
  default:
    external:
      name: main

services:
  dapr-placement:
    image: webdevsvc/dapr-placement
    container_name: dapr-placement.web-dev-svc.localhost
    restart: unless-stopped
    environment:
      - VIRTUAL_HOST=dapr-placement.web-dev-svc.localhost
      - VIRTUAL_PORT=50005
    depends_on:
      - nginx-proxy
    expose:
      - "3500"
      - "7777"
      - "9090"
      - "50001"
      - "50005"
    ports:
      - "3500:3500"
      - "7777:7777"
      - "9090:9090"
      - "50001:50001"
      - "50005:50005"

  dynamodb:
    image: webdevsvc/dynamodb
    container_name: dynamodb.web-dev-svc.localhost
    restart: unless-stopped
    environment:
      - VIRTUAL_HOST=dynamodb.web-dev-svc.localhost
      - VIRTUAL_PORT=8000
    depends_on:
      - nginx-proxy
    expose:
      - "8000"
    ports:
      - "8000:8000"
    volumes:
      - ./mnt/dynamodb/data:/data

  dynamodb-admin:
    image: webdevsvc/dynamodb-admin
    container_name: dynamodb-admin.web-dev-svc.localhost
    restart: unless-stopped
    environment:
      - DYNAMO_ENDPOINT=http://dynamodb:8000
      - VIRTUAL_HOST=dynamodb-admin.web-dev-svc.localhost
      - VIRTUAL_PORT=8001
    depends_on:
      - dynamodb
      - nginx-proxy
    expose:
      - "8001"

  jaegertracing:
    image: webdevsvc/jaegertracing
    container_name: jaegertracing.web-dev-svc.localhost
    restart: unless-stopped
    environment:
      - VIRTUAL_HOST=jaegertracing.web-dev-svc.localhost
      - VIRTUAL_PORT=16686
    expose:
      - "5775/udp"
      - "5778"
      - "6831/udp"
      - "6832/udp"
      - "9411"
      - "14268"
      - "16686"

  mailcatcher:
    image: webdevsvc/mailcatcher
    container_name: mailcatcher.web-dev-svc.localhost
    restart: unless-stopped
    environment:
      - VIRTUAL_HOST=mailcatcher.web-dev-svc.localhost
      - VIRTUAL_PORT=1080
    depends_on:
      - nginx-proxy
    expose:
      - "25"
      - "1080"
    ports:
      - "25:25"

  memcached:
    image: webdevsvc/memcached
    container_name: memcached.web-dev-svc.localhost
    restart: unless-stopped
    expose:
      - "11211"
    ports:
      - "11211:11211"

  minio:
    image: webdevsvc/minio
    container_name: minio.web-dev-svc.localhost
    restart: unless-stopped
    environment:
      - MINIO_ACCESS_KEY=123456789
      - MINIO_SECRET_KEY=123456789
      - VIRTUAL_HOST=minio.web-dev-svc.localhost
      - VIRTUAL_PORT=80
    depends_on:
      - nginx-proxy
    expose:
      - "80"
    volumes:
      - ./mnt/minio/config:/root/.minio
      - ./mnt/minio/data:/data

  mongo-express:
    image: webdevsvc/mongo-express
    container_name: mongo-express.web-dev-svc.localhost
    restart: unless-stopped
    environment:
      - ME_CONFIG_MONGODB_ADMINPASSWORD=admin
      - ME_CONFIG_MONGODB_ADMINUSERNAME=admin
      - ME_CONFIG_MONGODB_PORT=27017
      - ME_CONFIG_MONGODB_SERVER=mongodb
      - VIRTUAL_HOST=mongo-express.web-dev-svc.localhost
      - VIRTUAL_PORT=8081
    depends_on:
      - mongodb
      - nginx-proxy
    expose:
      - "8081"

  mongodb:
    image: webdevsvc/mongodb
    container_name: mongodb.web-dev-svc.localhost
    restart: unless-stopped
    environment:
      - MONGO_INITDB_ROOT_PASSWORD=admin
      - MONGO_INITDB_ROOT_USERNAME=admin
    expose:
      - "27017"
      - "27018"
      - "27019"
      - "28017"
    ports:
      - "27017:27017"
      - "27018:27018"
      - "27019:27019"
      - "28017:28017"
    volumes:
      - /data/db

  mysql:
    image: webdevsvc/mysql
    container_name: mysql.web-dev-svc.localhost
    restart: unless-stopped
    environment:
      - MYSQL_ROOT_PASSWORD=root
    expose:
      - "3306"
    ports:
      - "3306:3306"
    volumes:
      - ./mnt/mysql/data:/var/lib/mysql
    command:
      - --default-authentication-plugin=mysql_native_password

  nginx-proxy:
    image: webdevsvc/nginx-proxy
    container_name: nginx-proxy.web-dev-svc.localhost
    restart: unless-stopped
    expose:
      - "80"
      - "443"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./mnt/nginx-proxy/vhost.d:/etc/nginx/vhost.d:ro
      - /var/run/docker.sock:/tmp/docker.sock:ro

  pgadmin:
    image: webdevsvc/pgadmin
    container_name: pgadmin.web-dev-svc.localhost
    restart: unless-stopped
    environment:
      - MAIL_PASSWORD=
      - MAIL_PORT=25
      - MAIL_SERVER=mailcatcher
      - MAIL_USERNAME=
      - MAIL_USE_SSL=False
      - VIRTUAL_HOST=pgadmin.web-dev-svc.localhost
      - VIRTUAL_PORT=5050
    depends_on:
      - mailcatcher
      - postgres
      - nginx-proxy
    expose:
      - "5050"
    volumes:
      - ./mnt/pgadmin/data:/var/lib/pgadmin

  phpmemadmin:
    image: webdevsvc/phpmemadmin
    container_name: phpmemadmin.web-dev-svc.localhost
    restart: unless-stopped
    environment:
      - VIRTUAL_HOST=phpmemadmin.web-dev-svc.localhost
      - VIRTUAL_PORT=80
    depends_on:
      - memcached
      - nginx-proxy
    expose:
      - "80"

  phpmyadmin:
    image: webdevsvc/phpmyadmin
    container_name: phpmyadmin.web-dev-svc.localhost
    restart: unless-stopped
    environment:
      - PMA_ARBITRARY=1
      - PMA_HOST=mysql
      - PMA_PASSWORD=root
      - PMA_PORT=3306
      - PMA_USER=root
      - VIRTUAL_HOST=phpmyadmin.web-dev-svc.localhost
      - VIRTUAL_PORT=80
    depends_on:
      - mysql
      - nginx-proxy
    expose:
      - "80"

  portainer:
    image: webdevsvc/portainer
    container_name: portainer.web-dev-svc.localhost
    restart: unless-stopped
    environment:
      - VIRTUAL_HOST=portainer.web-dev-svc.localhost
      - VIRTUAL_PORT=9000
    depends_on:
      - nginx-proxy
    expose:
      - "9000"
    volumes:
      - ./mnt/portainer/data:/data
      - /var/run/docker.sock:/var/run/docker.sock

  postgres:
    image: webdevsvc/postgres
    container_name: postgres.web-dev-svc.localhost
    restart: unless-stopped
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
    expose:
      - "5432"
    ports:
      - "5432:5432"
    volumes:
      - ./mnt/postgres/data:/var/lib/postgresql/data/pgdata

  redis:
    image: webdevsvc/redis
    container_name: redis.web-dev-svc.localhost
    restart: unless-stopped
    environment:
      - REDIS_PASSWORD=root
    expose:
      - "6379"
      - "16379"
      - "26379"
    ports:
      - "6379:6379"
      - "16379:16379"
      - "26379:26379"
    volumes:
      - ./mnt/redis/data:/data

  redis-commander:
    image: webdevsvc/redis-commander
    container_name: redis-commander.web-dev-svc.localhost
    restart: unless-stopped
    environment:
      - REDIS_DB=0
      - REDIS_HOST=redis
      - REDIS_NAME=redis
      - REDIS_PASSWORD=root
      - REDIS_PORT=6379
      - VIRTUAL_HOST=redis-commander.web-dev-svc.localhost
      - VIRTUAL_PORT=8081
    depends_on:
      - redis
      - nginx-proxy
    expose:
      - "8081"

  zipkin:
    image: webdevsvc/zipkin
    container_name: zipkin.web-dev-svc.localhost
    restart: unless-stopped
    environment:
      - VIRTUAL_HOST=zipkin.web-dev-svc.localhost
      - VIRTUAL_PORT=9411
    depends_on:
      - nginx-proxy
    expose:
      - "9410"
      - "9411"
